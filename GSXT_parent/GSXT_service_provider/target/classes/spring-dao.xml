<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!--扫描业务逻辑组件-->
    <context:component-scan base-package="com.gsxt">
        <!--让spring的扫描组件不扫描控制器-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置数据源。引入外部文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--使用德鲁伊连接池创建pooledDataSource对象-->
    <bean id="pooledDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--spring与mybatis的整合-->
    <!--创建sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定mybatis全局配置文件的位置-->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>
        <!--指定数据源-->
        <property name="dataSource" ref="pooledDataSource"/>
        <!--配置实体类-->
        <!--<property name="typeAliasesPackage" value="com.gsxt.pojo"/>-->
        <!--指定mybatis中mapper配置文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*xml"/>
    </bean>

    <!--使用到了mybatis-spring-->
    <!--配置扫描器，将mybatis中Mapper接口的实现的代理对象加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有的dao接口的实现，加入到ioc容器中-->
        <property name="basePackage" value="com.gsxt.dao"/>
    </bean>
</beans>